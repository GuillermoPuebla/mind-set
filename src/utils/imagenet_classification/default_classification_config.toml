gpu_num = 0

[network]
#  Supported networks: `alexnet`, `vgg11`, `vgg16`, `vgg11bn`, `vgg16bn`, `vgg19bn`, `resnet18`, `resnet50`, `resnet152`, `inception_v3` , `densenet121`, `densenet201`, `googlenet`. 
architecture_name = "resnet152" 
# Whether to use the architecture version pretrained with ImageNet.
imagenet_pretrained = true
# If you want to load a state_dict of a pretrained netwrok, specify the path here. If you use this, "imagenet_pretraing" will be ignored. 
load_path = false
batch_size = 64

# Example of validation datasets.
# [[eval.datasets]]
# name = "name_val1"
# annotation_file = ""
# img_path_col_name = "Path"
# label_cols = ["ImageNetClassIdx"]
# filters = {} # or filters = { Type = "blabla"} 

# You can use more than one validation dataset
# [[eval.datasets]]
# name = "name_val2"
# annotation_file = ""
# img_path_col_name = "Path"
# label_cols = ["val2"]
# filters = { Type = "blabla"}


[saving_folders]
# The paths for saving the results and the model. If false, no saving will occur. Notice that, during training, the `train_id` will be appended to these folders. 
results_folder = 'results/imagenet_classification/'

[transformation]
fill_color = [0, 0, 0]

[transformation.values]
# TODO: Fix Documentation. 
# Set it to "false" to not apply the respective transformation. 
translation = [-0.2, 0.2] 
scale = [0.7, 1.3]
rotation = [0, 360]